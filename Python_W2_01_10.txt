Question: Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
l = []
for i in range(1000,3001,2):
	a = sorted(str(i))
	a = [int(a) for a in a]
	if a[0]%2 ==0 and a[1]%2 ==0 and a[2]%2 ==0 and a[3]%2 ==0:
		l.append(i)

l = [str(l) for l in l]
print(','.join(l))

============================

Question: Write a program that accepts a sentence and calculate the number of letters and digits. Suppose the following input is supplied to the program: hello world! 123 Then, the output should be: LETTERS 10 DIGITS 3

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
x = input("Enter a Alpha-Numeric sentence : ")
l = 0
d = 0
for i in range(len(x)):
	if ord(x[i]) in range(49,58):
		d = d+1
	elif ord(x[i]) in range(97,123):
		l = l+1
	
print("Digits in entered sentence : " + str(d))
print("Letters in entered sentence : " + str(l))

============================

Question: Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters. Suppose the following input is supplied to the program: Hello world! Then, the output should be: UPPER CASE 1 LOWER CASE 9

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
u = 0
l = 0
x = input("Enter a sentence : ")
for i in range(len(x)):
	if x[i].isupper():
		u += 1
	elif x[i].islower():
		l += 1
	else:
		pass
		
print(u)
print(l)

============================

Question: Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a. Suppose the following input is supplied to the program: 9 Then, the output should be: 11106

Hints: In case of input data being supplied to the question, it should be assumed to be a console input.

Solution:
x = input("Please choose a digit from 0 to 9 : ")
print("\nYou choose " + x)
y = int(x) + int(x + x) + int(x + x + x) + int(x + x + x + x)
print("And your answer is :" + str(y))

============================

Question:
Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.
Suppose the following input is supplied to the program:
1,2,3,4,5,6,7,8,9
Then, the output should be:
1,3,5,7,9

Solution:
l = []
x = input("Please enter comma-separated numbers :")
x = x.split(',')
for i in range(len(x)):
	if int(x[i])%2 != 0:
		l.append(x[i])
print(l)
l = [int(j)*int(j) for j in l]
l = [str(j) for j in l]
print(','.join(l))

============================

Question:
Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following:
D 100
W 200

D means deposit while W means withdrawal.
Suppose the following input is supplied to the program:
D 300
D 300
W 200
D 100
Then, the output should be:
500

Solution:
t = 0
while True:
	x = input("Transaction (Press 'n' to exit): ")
	if x[0].lower() == 'n':
		break
	elif x[0] == 'D':
		t = t + int(x.split(" ")[1])
	elif x[0] == 'W':
		t = t - int(x.split(" ")[1])
	else:
		pass
	
print(t)

============================

Question:
A website requires the users to input username and password to register. Write a program to check the validity of password input by users.
Following are the criteria for checking the password:
1. At least 1 letter between [a-z]
2. At least 1 number between [0-9]
1. At least 1 letter between [A-Z]
3. At least 1 character from [$#@]
4. Minimum length of transaction password: 6
5. Maximum length of transaction password: 12
Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.
Example
If the following passwords are given as input to the program:
ABd1234@1,a F1#,2w3E*,2We3345
Then, the output of the program should be:
ABd1234@1
'''

#username = input("Username please : ")
password = input("Password please : ")
password = password.split(",")
for i in range(len(password)):
	if len(password[i]) > 12:
		print("Too many characters")
		break
	elif len(password[i]) < 6:
		print("Too less characters")
		break
	elif not any([j.isupper() for j in password[i]]):
		print("No Capital alphabet used")
		break
	elif not any([j.islower() for j in password[i]]):
		print("No Small alphabet used")
		break
	elif not any([j.isdigit() for j in password[i]]):
		print("No Digits used")
		break
	elif not any([(j in ['$','#','@']) for j in password[i]]):
		print("No Special Character used")
		break
	else:
		print(password[i])


============================

Question:
You are required to write a program to sort the (name, age, height) tuples by ascending order where name is string, age and height are numbers.
The tuples are input by console. The sort criteria is:
1: Sort based on name;
2: Then sort based on age;
3: Then sort by score.
The priority is that name > age > score.
If the following tuples are given as input to the program:
Tom,19,80
John,20,90
Jony,17,91
Jony,17,93
Json,21,85
Then, the output of the program should be:
[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]

Solution:
x = input("Enter name, age, height : ")
x = x.split(';')
x = [tuple(i) for i in x]
#x = sorted(x, key = [name, age, score])
print(x)

============================

Question:
Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.

Solution:
def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j

for i in reverse(100):
    print i

============================
